services:
  test:
    image: node:22-alpine
    command: sh -c "npm install && npm run build; npm run db:init -- -d && npm run db:seed:dev && npm run tracer -- --no-ws --allow-no-fifo && npm run workers:export && npm run test -- -c vitest.config.dump.mts"
    working_dir: /usr/src/app
    volumes:
      # use local files as source
      - .:/usr/src/app
    environment:
      NODE_ENV: development
      # contains db connection info that matches db service setup below
      CONFIG_FILE: config.dump-test.json
      # don't reset database on test run
      NO_TEST_DB_RESET: true
    # waits for db and redis to start
    depends_on:
      db_accounts:
        condition: service_healthy
      db_data:
        condition: service_healthy
      redis:
        condition: service_healthy
    # colorizes output
    tty: true

  db_accounts:
    image: postgres:14-alpine
    # matches config in config.dump-test.json
    environment:
      POSTGRES_DB: dev_accounts
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d dev_accounts -U dev']
      interval: 1s
      timeout: 3s
      retries: 5

  db_data:
    image: postgres:14-alpine
    # matches config in config.dump-test.json
    environment:
      POSTGRES_DB: dev_data
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d dev_data -U dev']
      interval: 1s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping']
      interval: 1s
      timeout: 3s
      retries: 5

volumes:
  node_modules:
