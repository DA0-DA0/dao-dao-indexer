services:
  server:
    image: node:22-alpine
    command: sh -c "npm install && npm run build; npm run db:init -- -d && npm run db:seed:dev && npm run serve:dev:nodocker"
    working_dir: /usr/src/app
    ports:
      - 3420:3420 # server
      - 9227:9227 # debug
    volumes:
      # use local files as source
      - .:/usr/src/app
    environment:
      NODE_ENV: development
      # contains db connection info that matches db service setup below
      CONFIG_FILE: config-dev.json
    # waits for db and redis to start
    depends_on:
      db_accounts:
        condition: service_healthy
      db_data:
        condition: service_healthy
      redis:
        condition: service_healthy
    # colorizes output
    tty: true

  db_accounts:
    image: postgres:17-alpine
    # matches config in config-dev.json
    environment:
      POSTGRES_DB: dev_accounts
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    volumes:
      - db_accounts_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d dev_accounts -U dev']
      interval: 1s
      timeout: 3s
      retries: 5

  db_data:
    image: timescale/timescaledb:2.18.1-pg17
    # matches config in config-dev.json
    environment:
      POSTGRES_DB: dev_data
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    volumes:
      - db_data_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d dev_data -U dev']
      interval: 1s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping']
      interval: 1s
      timeout: 3s
      retries: 5

  meilisearch:
    image: getmeili/meilisearch:latest
    environment:
      - MEILI_MASTER_KEY=masterKey
    ports:
      - '7700:7700'
    volumes:
      - meilisearch_data:/meili_data

volumes:
  node_modules:
  redis_data:
  meilisearch_data:
